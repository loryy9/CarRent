CREATE TABLE utenti (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  nome TEXT NOT NULL,
  cognome TEXT NOT NULL,
  email TEXT UNIQUE NOT NULL,
  password TEXT NOT NULL,
  data_nascita TEXT,
  telefono TEXT,
  ruolo TEXT DEFAULT 'utente', -- utente, admin
  data_registrazione TEXT DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE auto (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  marca TEXT,
  modello TEXT,
  immagine TEXT, -- path o URL
  disponibile INTEGER DEFAULT 1,
  velocita INTEGER NOT NULL, 
  cavalli INTEGER NOT NULL,
  tipologia TEXT NOT NULL, 
  pref_contatore INTEGER DEFAULT 0,
  prezzo_giornaliero REAL
);

CREATE TABLE preferite (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  id_utente INTEGER,
  id_auto INTEGER,
  FOREIGN KEY(id_utente) REFERENCES utenti(id),
  FOREIGN KEY(id_auto) REFERENCES auto(id)
);

CREATE TABLE prenotazioni (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  id_utente INTEGER,
  id_auto INTEGER,
  data_inizio TEXT,
  data_fine TEXT,
  stato TEXT DEFAULT 'prenotata', -- prenotata, in corso, completata, annullata
  data_creazione TEXT DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY(id_utente) REFERENCES utenti(id),
  FOREIGN KEY(id_auto) REFERENCES auto(id)
);

CREATE TABLE pacchetti_aggiuntivi (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  categoria TEXT,
  nome TEXT,
  descrizione TEXT,
  prezzo REAL
);

CREATE TABLE prenotazioni_pacchetti (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  id_prenotazione INTEGER,
  id_pacchetto INTEGER,
  FOREIGN KEY(id_prenotazione) REFERENCES prenotazioni(id),
  FOREIGN KEY(id_pacchetto) REFERENCES pacchetti_aggiuntivi(id)
);

CREATE TABLE recensioni (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  id_utente INTEGER,
  voto INTEGER CHECK(voto BETWEEN 1 AND 5),
  commento TEXT,
  data TEXT DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY(id_utente) REFERENCES utenti(id)
);
